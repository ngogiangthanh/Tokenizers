/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tags;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author thanh
 */
public class MainFrm extends javax.swing.JFrame {

    private List<Topic> listTopic = new ArrayList();

    public MainFrm() {
        initComponents();
        //Đọc nội dung file
        try {
            File currentDirFile = new File(".");
            String currentPathProject = currentDirFile.getAbsolutePath();
            String pathOfStopWords = currentPathProject.substring(0, currentPathProject.length() - 1) + "src/words.txt";
            //FileReader fr = new FileReader(pathOfStopWords);
            //BufferedReader br = new BufferedReader(fr);
            
            BufferedReader in = new BufferedReader(
		   new InputStreamReader(
                      new FileInputStream(pathOfStopWords), "UTF-8"));

            String line;
            while ((line = in.readLine()) != null) {
                String[] rsslipt = line.split("_");
                Topic topic = new Topic(rsslipt[0]);
                topic.setWords(rsslipt[1].split(","));
                this.listTopic.add(topic);
                this.cbbtopic.addItem(rsslipt[0].toLowerCase());
            }
        } catch (Exception ex) {
            System.out.println("UnuseWord.java - read words: " + ex.toString());
        }
        //Load vào nội dung cbb
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pntags = new javax.swing.JPanel();
        spinput = new javax.swing.JScrollPane();
        input = new javax.swing.JTextArea();
        spoutput = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        submit = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        pnhashtags = new javax.swing.JPanel();
        spinputhashtag = new javax.swing.JScrollPane();
        inputhashtags = new javax.swing.JTextArea();
        lbTopic = new javax.swing.JLabel();
        cbbtopic = new javax.swing.JComboBox<>();
        spoutputhashtag = new javax.swing.JScrollPane();
        outputhashtag = new javax.swing.JTextArea();
        btnsubmit = new javax.swing.JButton();
        btnreset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Creating tags");
        setMinimumSize(new java.awt.Dimension(720, 480));
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);

        input.setColumns(20);
        input.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        input.setRows(5);
        input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputKeyPressed(evt);
            }
        });
        spinput.setViewportView(input);

        output.setColumns(20);
        output.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        output.setRows(5);
        output.setEnabled(false);
        output.setVerifyInputWhenFocusTarget(false);
        spoutput.setViewportView(output);

        submit.setText("Create tags");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        reset.setText("Clear");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pntagsLayout = new javax.swing.GroupLayout(pntags);
        pntags.setLayout(pntagsLayout);
        pntagsLayout.setHorizontalGroup(
            pntagsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pntagsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pntagsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spoutput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pntagsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(submit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(spinput, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pntagsLayout.setVerticalGroup(
            pntagsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pntagsLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(spinput, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spoutput, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pntagsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(reset, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8))
        );

        jTabbedPane1.addTab("Tags", pntags);

        inputhashtags.setColumns(20);
        inputhashtags.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        inputhashtags.setRows(5);
        spinputhashtag.setViewportView(inputhashtags);

        lbTopic.setText("Chủ đề:");

        outputhashtag.setColumns(20);
        outputhashtag.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        outputhashtag.setRows(5);
        outputhashtag.setEnabled(false);
        outputhashtag.setVerifyInputWhenFocusTarget(false);
        spoutputhashtag.setViewportView(outputhashtag);

        btnsubmit.setText("Create");
        btnsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsubmitActionPerformed(evt);
            }
        });

        btnreset.setText("Clear");
        btnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnhashtagsLayout = new javax.swing.GroupLayout(pnhashtags);
        pnhashtags.setLayout(pnhashtagsLayout);
        pnhashtagsLayout.setHorizontalGroup(
            pnhashtagsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnhashtagsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnhashtagsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spinputhashtag)
                    .addGroup(pnhashtagsLayout.createSequentialGroup()
                        .addComponent(lbTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbtopic, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(spoutputhashtag, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnhashtagsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnreset)))
                .addContainerGap())
        );
        pnhashtagsLayout.setVerticalGroup(
            pnhashtagsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnhashtagsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spinputhashtag, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnhashtagsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbbtopic)
                    .addComponent(lbTopic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spoutputhashtag, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnhashtagsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnreset, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsubmit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Hash tags", pnhashtags);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Tags");

        setSize(new java.awt.Dimension(742, 536));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void inputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_V) && ((evt.getModifiers() & KeyEvent.CTRL_MASK) != 0)) {

        }
    }//GEN-LAST:event_inputKeyPressed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        if (!input.getText().trim().isEmpty()) {
            ArrayList<String> outputs = Tags.getTokenize(input.getText());
            String output_string = "";
            for (String output : outputs) {
                output_string += output + ", ";
            }
            String rs = output_string.substring(0, output_string.length() - 2);
            output.setText(rs);
            output.requestFocusInWindow();//<----------
            output.selectAll();
            StringSelection stringSelection = new StringSelection(rs);
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
        } else {
            JOptionPane.showMessageDialog(this, "Please put the content to this field", "Alert", JOptionPane.WARNING_MESSAGE);
            input.requestFocus();
        }
    }//GEN-LAST:event_submitActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        this.input.setText(null);
        this.input.requestFocus();
        this.output.setText(null);
    }//GEN-LAST:event_resetActionPerformed

    private void btnsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsubmitActionPerformed
        if (!inputhashtags.getText().trim().isEmpty()) {
            String topic_str = this.cbbtopic.getSelectedItem().toString();
            Topic topic = new Topic();
            for (Topic tp : this.listTopic) {
                if (tp.getName().toLowerCase().equals(topic_str)) {
                    topic.setName(topic_str);
                    topic.setWords(tp.getWords());
                    break;
                }
            }

            HashTags hashTag = new HashTags(inputhashtags.getText());
            hashTag.init();
            //hashTag.decrease(topic);
            //hashTag.increase(topic);
            ArrayList<String> outputs = hashTag.getListags();

            String output_string = "";
            for (String output : outputs) {
                output_string += "#" + output.replaceAll(" ", "_") + ", ";
            }
            String rs = output_string.substring(0, output_string.length() - 2);
            outputhashtag.setText(rs);
            outputhashtag.requestFocusInWindow();//<----------
            outputhashtag.selectAll();
            StringSelection stringSelection = new StringSelection(rs);
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
        } else {
            JOptionPane.showMessageDialog(this, "Please put the content to this field", "Alert", JOptionPane.WARNING_MESSAGE);
            inputhashtags.requestFocus();
        }
    }//GEN-LAST:event_btnsubmitActionPerformed

    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
        this.inputhashtags.setText(null);
        this.inputhashtags.requestFocus();
        this.outputhashtag.setText(null);
    }//GEN-LAST:event_btnresetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainFrm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnreset;
    private javax.swing.JButton btnsubmit;
    private javax.swing.JComboBox<String> cbbtopic;
    private javax.swing.JTextArea input;
    private javax.swing.JTextArea inputhashtags;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbTopic;
    private javax.swing.JTextArea output;
    private javax.swing.JTextArea outputhashtag;
    private javax.swing.JPanel pnhashtags;
    private javax.swing.JPanel pntags;
    private javax.swing.JButton reset;
    private javax.swing.JScrollPane spinput;
    private javax.swing.JScrollPane spinputhashtag;
    private javax.swing.JScrollPane spoutput;
    private javax.swing.JScrollPane spoutputhashtag;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
